{"version":3,"sources":["../../../../src/app-router/client/ClerkProvider.tsx"],"sourcesContent":["'use client';\nimport { ClerkProvider as ReactClerkProvider } from '@clerk/clerk-react';\nimport type { ClerkHostRouter } from '@clerk/shared/router';\nimport { ClerkHostRouterContext } from '@clerk/shared/router';\nimport { usePathname, useRouter, useSearchParams } from 'next/navigation';\nimport React, { useEffect, useTransition } from 'react';\n\nimport { useSafeLayoutEffect } from '../../client-boundary/hooks/useSafeLayoutEffect';\nimport { ClerkNextOptionsProvider } from '../../client-boundary/NextOptionsContext';\nimport type { NextClerkProviderProps } from '../../types';\nimport { ClerkJSScript } from '../../utils/clerk-js-script';\nimport { mergeNextClerkPropsWithEnv } from '../../utils/mergeNextClerkPropsWithEnv';\nimport { invalidateCacheAction } from '../server-actions';\nimport { useAwaitablePush } from './useAwaitablePush';\nimport { useAwaitableReplace } from './useAwaitableReplace';\n\ndeclare global {\n  export interface Window {\n    __clerk_nav_await: Array<(value: void) => void>;\n    __clerk_nav: (to: string) => Promise<void>;\n    __clerk_internal_invalidateCachePromise: () => void | undefined;\n    next?: {\n      version: string;\n    };\n  }\n}\n\n// The version that Next added support for the window.history.pushState and replaceState APIs.\n// ref: https://nextjs.org/blog/next-14-1#windowhistorypushstate-and-windowhistoryreplacestate\nexport const NEXT_WINDOW_HISTORY_SUPPORT_VERSION = '14.1.0';\n\n/**\n * Clerk router integration with Next.js's router.\n */\nexport const useNextRouter = (): ClerkHostRouter => {\n  const router = useRouter();\n  const pathname = usePathname();\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- The order doesn't differ between renders as we're checking the execution environment.\n  const searchParams = typeof window === 'undefined' ? new URLSearchParams() : useSearchParams();\n\n  // The window.history APIs seem to prevent Next.js from triggering a full page re-render, allowing us to\n  // preserve internal state between steps.\n  const canUseWindowHistoryAPIs =\n    typeof window !== 'undefined' && window.next && window.next.version >= NEXT_WINDOW_HISTORY_SUPPORT_VERSION;\n\n  return {\n    mode: 'path',\n    name: 'NextRouter',\n    push: (path: string) => router.push(path),\n    replace: (path: string) =>\n      canUseWindowHistoryAPIs ? window.history.replaceState(null, '', path) : router.replace(path),\n    shallowPush(path: string) {\n      canUseWindowHistoryAPIs ? window.history.pushState(null, '', path) : router.push(path, {});\n    },\n    pathname: () => pathname,\n    searchParams: () => searchParams,\n  };\n};\n\nexport const ClientClerkProvider = (props: NextClerkProviderProps) => {\n  const { __unstable_invokeMiddlewareOnAuthStateChange = true, children } = props;\n  const router = useRouter();\n  const clerkRouter = useNextRouter();\n  const push = useAwaitablePush();\n  const replace = useAwaitableReplace();\n  const [isPending, startTransition] = useTransition();\n\n  useEffect(() => {\n    if (!isPending) {\n      window.__clerk_internal_invalidateCachePromise?.();\n    }\n  }, [isPending]);\n\n  useSafeLayoutEffect(() => {\n    window.__unstable__onBeforeSetActive = () => {\n      /**\n       * We need to invalidate the cache in case the user is navigating to a page that\n       * was previously cached using the auth state that was active at the time.\n       *\n       *  We also need to await for the invalidation to happen before we navigate,\n       * otherwise the navigation will use the cached page.\n       *\n       * For example, if we did not invalidate the flow, the following scenario would be broken:\n       * - The middleware is configured in such a way that it redirects you back to the same page if a certain condition is true (eg, you need to pick an org)\n       * - The user has a <Link href=/> component in the page\n       * - The UB is mounted with afterSignOutUrl=/\n       * - The user clicks the Link. A nav to / happens, a 307 to the current page is returned so a navigation does not take place. The / navigation is now cached as a 307 to the current page\n       * - The user clicks sign out\n       * - We call router.refresh()\n       * - We navigate to / but its cached and instead, we 'redirect' to the current page\n       *\n       *  For more information on cache invalidation, see:\n       * https://nextjs.org/docs/app/building-your-application/caching#invalidation-1\n       */\n      return new Promise(res => {\n        window.__clerk_internal_invalidateCachePromise = res;\n        startTransition(() => {\n          if (window.next?.version && typeof window.next.version === 'string' && window.next.version.startsWith('13')) {\n            router.refresh();\n          } else {\n            void invalidateCacheAction();\n          }\n        });\n      });\n    };\n\n    window.__unstable__onAfterSetActive = () => {\n      if (__unstable_invokeMiddlewareOnAuthStateChange) {\n        return router.refresh();\n      }\n    };\n  }, []);\n\n  const mergedProps = mergeNextClerkPropsWithEnv({\n    ...props,\n    routerPush: push,\n    routerReplace: replace,\n  });\n\n  return (\n    <ClerkNextOptionsProvider options={mergedProps}>\n      <ReactClerkProvider {...mergedProps}>\n        <ClerkJSScript router='app' />\n        <ClerkHostRouterContext.Provider value={clerkRouter}>{children}</ClerkHostRouterContext.Provider>\n      </ReactClerkProvider>\n    </ClerkNextOptionsProvider>\n  );\n};\n"],"mappings":";AACA,SAAS,iBAAiB,0BAA0B;AAEpD,SAAS,8BAA8B;AACvC,SAAS,aAAa,WAAW,uBAAuB;AACxD,OAAO,SAAS,WAAW,qBAAqB;AAEhD,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AAEzC,SAAS,qBAAqB;AAC9B,SAAS,kCAAkC;AAC3C,SAAS,6BAA6B;AACtC,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AAe7B,MAAM,sCAAsC;AAK5C,MAAM,gBAAgB,MAAuB;AAClD,QAAM,SAAS,UAAU;AACzB,QAAM,WAAW,YAAY;AAE7B,QAAM,eAAe,OAAO,WAAW,cAAc,IAAI,gBAAgB,IAAI,gBAAgB;AAI7F,QAAM,0BACJ,OAAO,WAAW,eAAe,OAAO,QAAQ,OAAO,KAAK,WAAW;AAEzE,SAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM,CAAC,SAAiB,OAAO,KAAK,IAAI;AAAA,IACxC,SAAS,CAAC,SACR,0BAA0B,OAAO,QAAQ,aAAa,MAAM,IAAI,IAAI,IAAI,OAAO,QAAQ,IAAI;AAAA,IAC7F,YAAY,MAAc;AACxB,gCAA0B,OAAO,QAAQ,UAAU,MAAM,IAAI,IAAI,IAAI,OAAO,KAAK,MAAM,CAAC,CAAC;AAAA,IAC3F;AAAA,IACA,UAAU,MAAM;AAAA,IAChB,cAAc,MAAM;AAAA,EACtB;AACF;AAEO,MAAM,sBAAsB,CAAC,UAAkC;AACpE,QAAM,EAAE,+CAA+C,MAAM,SAAS,IAAI;AAC1E,QAAM,SAAS,UAAU;AACzB,QAAM,cAAc,cAAc;AAClC,QAAM,OAAO,iBAAiB;AAC9B,QAAM,UAAU,oBAAoB;AACpC,QAAM,CAAC,WAAW,eAAe,IAAI,cAAc;AAEnD,YAAU,MAAM;AAnElB;AAoEI,QAAI,CAAC,WAAW;AACd,mBAAO,4CAAP;AAAA,IACF;AAAA,EACF,GAAG,CAAC,SAAS,CAAC;AAEd,sBAAoB,MAAM;AACxB,WAAO,gCAAgC,MAAM;AAoB3C,aAAO,IAAI,QAAQ,SAAO;AACxB,eAAO,0CAA0C;AACjD,wBAAgB,MAAM;AAhG9B;AAiGU,gBAAI,YAAO,SAAP,mBAAa,YAAW,OAAO,OAAO,KAAK,YAAY,YAAY,OAAO,KAAK,QAAQ,WAAW,IAAI,GAAG;AAC3G,mBAAO,QAAQ;AAAA,UACjB,OAAO;AACL,iBAAK,sBAAsB;AAAA,UAC7B;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,WAAO,+BAA+B,MAAM;AAC1C,UAAI,8CAA8C;AAChD,eAAO,OAAO,QAAQ;AAAA,MACxB;AAAA,IACF;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,QAAM,cAAc,2BAA2B;AAAA,IAC7C,GAAG;AAAA,IACH,YAAY;AAAA,IACZ,eAAe;AAAA,EACjB,CAAC;AAED,SACE,oCAAC,4BAAyB,SAAS,eACjC,oCAAC,sBAAoB,GAAG,eACtB,oCAAC,iBAAc,QAAO,OAAM,GAC5B,oCAAC,uBAAuB,UAAvB,EAAgC,OAAO,eAAc,QAAS,CACjE,CACF;AAEJ;","names":[]}